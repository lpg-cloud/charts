@{
    ViewBag.Title = "Home Page";
}

<div class="row" style="margin-top:50px;">
    <div class="form-group">
        <label>从文件中加载:</label>
        <input type="file" />
    </div>
    <form class="col-md-4">
        <div class="form-group">
            <label for="tableName">数据名称：</label>
            <select name="tableName" id="tableName" class="form-control" required></select>
        </div>
        <div class="form-group">
            <label for="chartType">展示类型：</label>
            <select name="chartType" class="form-control" id="chartType" list="chartTypes" required>
                <option value="条形图">条形图</option>
                <option value="折线图">折线图</option>
                <option value="饼状图">饼状图</option>
                <option value="环形图">环形图</option>
                <option value="表格">表格</option>
            </select>
        </div>
        <div id="chartName">

        </div>
        <div class="form-group">
            <label>数字类型：</label>
            <div id="integer"></div>
        </div>
        <div class="form-group">
            <label>文本类型：</label>
            <div id="text"></div>
        </div>
        <button type="submit" class="btn btn-default" formtarget="_blank">添加</button>
        <button type="button" class="btn btn-default" onclick="exportToJson(result)">导出</button>
    </form>
    <div class="col-md-5 contentBox" style="height:300px">
        <ul id="chartList"></ul>
    </div>
</div>

@section Scripts {
    <script src="~/Scripts/dataDic.js"></script>
    <script>
        //定义一个全局的列表变量存储生成的json
        let result=[];

        let nameGroup=$('<div class="form-group" id="nameGroup"><label for="chartName">图形名称:</label><input name="chartName" id="chartName" class="form-control" required></div> ');
        let file=document.querySelector('[type=file]');
        file.onchange=function(){
            let reader=new FileReader();
            reader.onload=function(e){
                let resultText=reader.result;

                resultObj=JSON.parse(resultText);
                for(let chartName in resultObj){
                    let currentChart=resultObj[chartName];
                    currentChart['chartName']=chartName;
                    currentChart.fields.forEach(function(field){
                        delete field.xyType;
                    });
                    if(!isObjInList(currentChart,result)){
                        result.push(currentChart);
                    }
                    
                }
                //result=JSON.parse(resultText);

                formatJson(result).then((string) => {
                    $('#result').html(string);
                    reflashSelect();
                });
            }
            reader.readAsText(file.files[0]);
        }

        $('#tableName').on('change', function (e) {
            let value = this.value;
            let tableName=e.target.value;
            if(!tableName){
                return;
            }
            var fields = tableModules[tableName].fields;

            $('#integer').empty();
            $('#text').empty();
            fields.forEach(function (fieldName, index) {
                if (dataDic[fieldName]) {
                    if (dataDic[fieldName].type === 'n') {
                        let html = '<div class="checkbox inline_block" onclick="removeReq()"><label><input type="checkbox" name="numField" value="'+fieldName+'" >' + dataDic[fieldName].name + '</label></div >';
                        $('#integer').append(html);
                    } else {
                        let html = '<div class="checkbox inline_block"><label ><input type="checkbox" name="txtField" id="optionsRadios3" value="'+ fieldName+'" >' + dataDic[fieldName].name +'</label></div >';
                        $('#text').append(html);
                    }
                }
            });
            $(':checkbox').click(function(){
                let txtLen= $('[name=txtField]:checked').length;
                let numLen= $('[name=numField]:checked').length;
                if(txtLen>1|numLen>1){
                    $('#chartName').append(nameGroup);
                }else{
                     nameGroup.remove();
                }
            })
        });
        //初始化table选择输入框
        $('#tableName').append('<option></option>');
        for (let table in tableModules) {
            $('#tableName').append('<option value="' + table+ '">'+ tableModules[table].name+'</option>');
        }

        function removeReq(){
            $('.checkbox label input').removeAttr('required');
        }
        
        $('form').submit(function(){
            let datas=$('form').serializeObject();
            let chartTypeList=[];
            chartData={
                chartName:"",
                tableName:"",
                fields:[]
            };
            if(datas.chartName===""|datas.chartName===null|datas.chartName===undefined){
                let txtField=dataDic[datas.txtField];
                let numField=dataDic[datas.numField];

                chartData.chartName=$('#tableName')[0].selectedOptions.item(0).innerText+txtField.name+"-"+numField.name+"统计图";
            }
            else{
                chartData.chartName=datas.chartName;
            }
            
            chartData.tableName=datas.tableName;
            //添加数字类型的字段
            try{
                chartData.fields.push({name:dataDic[datas.numField].name,fieldName:datas.numField,type:'n'});
                chartTypeList.push('数值');
            }catch{
                if(datas.numField){
                    datas.numField.forEach(function(numField){
                        chartData.fields.push({name:dataDic[numField].name,fieldName:numField,type:'n'});
                        chartTypeList.push('数值');
                    })
                }
            }
            //添加文本类型的字段
            try{
                chartData.fields.push({name:dataDic[datas.txtField].name,fieldName:datas.txtField,type:'t'});
                chartTypeList.push('类型');
            }catch{
                if(datas.txtField){
                    datas.txtField.forEach(function(txtField){
                        chartData.fields.push({name:dataDic[txtField].name,fieldName:txtField,type:'t'});
                        chartTypeList.push('类型');
                    })
                }
            }
            chartData.chartType=chartTypeList.join('_');
            
            //chartData.fields.push({name:"年份",type:'t',fieldName:"year"}); 
            if(!isObjInList(chartData,result)){
                //result.push({rowData:datas,data:chartData});
                result.push(chartData);
            }else{
                alert('已经存在了!!!');
                //$('.alert-danger').removeClass('hide').addClass('in');
            }
            reflashSelect();
            return false;
        });

        //刷新删除选择框中的内容
        function reflashSelect(){
            $('#chartList').empty();

            result.forEach(function(tableData,index){
                $('#chartList').append('<li>'+tableData.chartName+'<a onclick="removeItem(this)" class="pull-right" index="' + index + '">删除</a></li>');
            });
        }

        //移除按钮的点击事件
        function removeItem(target){
            //选中数据在获取总数据列表中的索引
            let index = target.getAttribute('index');
            let selectedOption= result[index];
            let newResult=result.reduce(function(result_,value,index){
                if(selectedOption!=value){
                    result_.push(value);
                }
                return result_;
            },[]);
            result=newResult;
            reflashSelect();
        }

        $('#tableDatas').on('change', function (e) {
            let index = e.target.selectedOptions.item(0).value;
            let data= preData[index];
            formatJson(data).then(str=>$('#currentRes').html(str));
            
        });

        function exportToJson(raw) {
            let result = raw.reduce(function (preValue, chart, index) {
                
                preValue[chart.chartName] = chart;
                delete chart.chartName;
                chart.fields.forEach(function (field) {
                    if (field.type === 't' | field.name==='年份') {
                        field['xyType'] = 'x';
                    } else {
                        field['xyType'] = 'y';
                    }
                });
                return preValue;
            }, {});
            downloadJSON(result, '样例数据');
        }
    </script>
    }